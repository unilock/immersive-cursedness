plugins {
	id 'com.modrinth.minotaur' version '2.+'
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	mods {
		"immersive-cursedness" {
			sourceSet("main")
		}
	}
}

repositories {
	maven { url = "https://maven.architectury.dev/" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi(include("me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}")) {
		exclude group: "net.fabricmc.fabric-api"
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

modrinth {
	var tokenEnv = System.getenv("MODRINTH_TOKEN")
	var changelogEnv = System.getenv("CHANGELOG")
	var nameEnv = System.getenv("NAME")
	if (tokenEnv == null || changelogEnv == null) {
		System.err.println("Didn't find correct env variables")
		return
	}

	token = tokenEnv
	projectId = project.modrinth_project
	uploadFile = remapJar

	loaders = ["fabric", "quilt"]
	gameVersions = ["1.20.2", "1.20.3", "1.20.4"]
	dependencies {
		required.project "fabric-api"
	}

	versionNumber = project.mod_version
	versionName = nameEnv
	changelog = changelogEnv
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
